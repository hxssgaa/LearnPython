2
1
反转链表
<html>
实现如下函数，将一个链表反转
void reverseLinkedList(Node *head) {

}
输入样例(每个输入按行进行输入，第一个数是链表的节点个数，后面是链表的各个节点)
5 1 2 3 4 5
输出样例(每个输出按空格进行输出，输出反转后的链表)
5 4 3 2 1
</html>
<test>
72 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1
1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1 1 2 3 4 5 4 3 2 1
5 2 3 4 5 6
6 5 4 3 2
1 1
1
</test>
2
插入排序
<html>
实现一个函数，用插入排序方法进行序列的排序（升序排序）
void directInsertionSort(int A[], int n) {

}
输入样例(每个输入按行进行输入，第一个数是待排序的数字个数，后面是待排序的数字)
5 9 3 1 5 8
输出样例(每个输出按空格进行输出，输出排序后的结果)
1 3 5 8 9
</html>
<test>
1 1
1
5 9 8 7 6 5
5 6 7 8 9
60 95 11 1 88 70 96 61 97 23 53 75 66 91 84 20 22 88 29 66 8 34 72 50 3 0 98 55 39 49 48 25 39 97 87 4 15 25 5 67 8 98 61 56 2 32 5 45 80 96 80 11 99 31 76 6 97 24 29 71 81
0 1 11 11 15 2 20 22 23 24 25 25 29 29 3 31 32 34 39 39 4 45 48 49 5 5 50 53 55 56 6 60 61 61 66 66 67 70 71 72 75 76 8 8 80 80 81 84 87 88 88 91 95 96 96 97 97 97 98 98 99
</test>